	.file	"gemm_r.c"
	.text
	.section	.rodata
.LC0:
	.string	"%d "
	.text
	.globl	display
	.type	display, @function
display:
.LFB5:
	.cfi_startproc
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register 6
	pushq	%rbx
	subq	$40, %rsp
	.cfi_offset 3, -24
	movl	%edi, -36(%rbp)
	movl	%esi, -40(%rbp)
	movq	%rdx, -48(%rbp)
	movl	-40(%rbp), %ebx
	movslq	%ebx, %rax
	subq	$1, %rax
	movq	%rax, -24(%rbp)
	movslq	%ebx, %rax
	movq	%rax, %r8
	movl	$0, %r9d
	movl	$0, -28(%rbp)
	jmp	.L2
.L5:
	movl	$0, -32(%rbp)
	jmp	.L3
.L4:
	movl	-28(%rbp), %eax
	movslq	%eax, %rdx
	movslq	%ebx, %rax
	imulq	%rdx, %rax
	leaq	0(,%rax,4), %rdx
	movq	-48(%rbp), %rax
	addq	%rax, %rdx
	movl	-32(%rbp), %eax
	cltq
	movl	(%rdx,%rax,4), %eax
	movl	%eax, %esi
	leaq	.LC0(%rip), %rdi
	movl	$0, %eax
	call	printf@PLT
	addl	$1, -32(%rbp)
.L3:
	movl	-32(%rbp), %eax
	cmpl	-40(%rbp), %eax
	jl	.L4
	movl	$10, %edi
	call	putchar@PLT
	addl	$1, -28(%rbp)
.L2:
	movl	-28(%rbp), %eax
	cmpl	-36(%rbp), %eax
	jl	.L5
	movl	$0, %eax
	addq	$40, %rsp
	popq	%rbx
	popq	%rbp
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE5:
	.size	display, .-display
	.section	.rodata
.LC1:
	.string	"A="
.LC2:
	.string	"\nB="
.LC3:
	.string	"\nC="
	.text
	.globl	main
	.type	main, @function
main:
.LFB6:
	.cfi_startproc
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register 6
	subq	$416, %rsp
	movq	%fs:40, %rax
	movq	%rax, -8(%rbp)
	xorl	%eax, %eax
	movl	$1, -400(%rbp)
	movl	$2, -396(%rbp)
	movl	$3, -392(%rbp)
	movl	$4, -388(%rbp)
	movl	$5, -384(%rbp)
	movl	$6, -380(%rbp)
	movl	$7, -376(%rbp)
	movl	$8, -372(%rbp)
	movl	$1, -368(%rbp)
	movl	$2, -364(%rbp)
	movl	$3, -360(%rbp)
	movl	$4, -356(%rbp)
	movl	$5, -352(%rbp)
	movl	$6, -348(%rbp)
	movl	$7, -344(%rbp)
	movl	$8, -340(%rbp)
	movl	$1, -336(%rbp)
	movl	$2, -332(%rbp)
	movl	$3, -328(%rbp)
	movl	$4, -324(%rbp)
	movl	$1, -320(%rbp)
	movl	$2, -316(%rbp)
	movl	$3, -312(%rbp)
	movl	$4, -308(%rbp)
	movl	$4, -304(%rbp)
	movl	$5, -300(%rbp)
	movl	$6, -296(%rbp)
	movl	$7, -292(%rbp)
	movl	$4, -288(%rbp)
	movl	$5, -284(%rbp)
	movl	$6, -280(%rbp)
	movl	$7, -276(%rbp)
	movl	$0, -412(%rbp)
	jmp	.L8
.L13:
	movl	$0, -408(%rbp)
	jmp	.L9
.L12:
	movl	-408(%rbp), %eax
	cltq
	movl	-412(%rbp), %edx
	movslq	%edx, %rdx
	salq	$3, %rdx
	addq	%rdx, %rax
	movl	$0, -272(%rbp,%rax,4)
	movl	-408(%rbp), %eax
	addl	$1, %eax
	cltq
	movl	-412(%rbp), %edx
	movslq	%edx, %rdx
	salq	$3, %rdx
	addq	%rdx, %rax
	movl	$0, -272(%rbp,%rax,4)
	movl	-408(%rbp), %eax
	addl	$2, %eax
	cltq
	movl	-412(%rbp), %edx
	movslq	%edx, %rdx
	salq	$3, %rdx
	addq	%rdx, %rax
	movl	$0, -272(%rbp,%rax,4)
	movl	-408(%rbp), %eax
	addl	$3, %eax
	cltq
	movl	-412(%rbp), %edx
	movslq	%edx, %rdx
	salq	$3, %rdx
	addq	%rdx, %rax
	movl	$0, -272(%rbp,%rax,4)
	movl	$0, -404(%rbp)
	jmp	.L10
.L11:
	movl	-408(%rbp), %eax
	cltq
	movl	-412(%rbp), %edx
	movslq	%edx, %rdx
	salq	$3, %rdx
	addq	%rdx, %rax
	movl	-272(%rbp,%rax,4), %edx
	movl	-404(%rbp), %eax
	cltq
	movl	-412(%rbp), %ecx
	movslq	%ecx, %rcx
	addq	%rcx, %rcx
	addq	%rcx, %rax
	movl	-400(%rbp,%rax,4), %ecx
	movl	-408(%rbp), %eax
	cltq
	movl	-404(%rbp), %esi
	movslq	%esi, %rsi
	salq	$3, %rsi
	addq	%rsi, %rax
	movl	-336(%rbp,%rax,4), %eax
	imull	%ecx, %eax
	addl	%eax, %edx
	movl	-408(%rbp), %eax
	cltq
	movl	-412(%rbp), %ecx
	movslq	%ecx, %rcx
	salq	$3, %rcx
	addq	%rcx, %rax
	movl	%edx, -272(%rbp,%rax,4)
	movl	-408(%rbp), %eax
	addl	$1, %eax
	cltq
	movl	-412(%rbp), %edx
	movslq	%edx, %rdx
	salq	$3, %rdx
	addq	%rdx, %rax
	movl	-272(%rbp,%rax,4), %edx
	movl	-404(%rbp), %eax
	cltq
	movl	-412(%rbp), %ecx
	movslq	%ecx, %rcx
	addq	%rcx, %rcx
	addq	%rcx, %rax
	movl	-400(%rbp,%rax,4), %ecx
	movl	-408(%rbp), %eax
	addl	$1, %eax
	cltq
	movl	-404(%rbp), %esi
	movslq	%esi, %rsi
	salq	$3, %rsi
	addq	%rsi, %rax
	movl	-336(%rbp,%rax,4), %eax
	imull	%ecx, %eax
	movl	-408(%rbp), %ecx
	addl	$1, %ecx
	addl	%eax, %edx
	movslq	%ecx, %rax
	movl	-412(%rbp), %ecx
	movslq	%ecx, %rcx
	salq	$3, %rcx
	addq	%rcx, %rax
	movl	%edx, -272(%rbp,%rax,4)
	movl	-408(%rbp), %eax
	addl	$2, %eax
	cltq
	movl	-412(%rbp), %edx
	movslq	%edx, %rdx
	salq	$3, %rdx
	addq	%rdx, %rax
	movl	-272(%rbp,%rax,4), %edx
	movl	-404(%rbp), %eax
	cltq
	movl	-412(%rbp), %ecx
	movslq	%ecx, %rcx
	addq	%rcx, %rcx
	addq	%rcx, %rax
	movl	-400(%rbp,%rax,4), %ecx
	movl	-408(%rbp), %eax
	addl	$2, %eax
	cltq
	movl	-404(%rbp), %esi
	movslq	%esi, %rsi
	salq	$3, %rsi
	addq	%rsi, %rax
	movl	-336(%rbp,%rax,4), %eax
	imull	%ecx, %eax
	movl	-408(%rbp), %ecx
	addl	$2, %ecx
	addl	%eax, %edx
	movslq	%ecx, %rax
	movl	-412(%rbp), %ecx
	movslq	%ecx, %rcx
	salq	$3, %rcx
	addq	%rcx, %rax
	movl	%edx, -272(%rbp,%rax,4)
	movl	-408(%rbp), %eax
	addl	$3, %eax
	cltq
	movl	-412(%rbp), %edx
	movslq	%edx, %rdx
	salq	$3, %rdx
	addq	%rdx, %rax
	movl	-272(%rbp,%rax,4), %edx
	movl	-404(%rbp), %eax
	cltq
	movl	-412(%rbp), %ecx
	movslq	%ecx, %rcx
	addq	%rcx, %rcx
	addq	%rcx, %rax
	movl	-400(%rbp,%rax,4), %ecx
	movl	-408(%rbp), %eax
	addl	$3, %eax
	cltq
	movl	-404(%rbp), %esi
	movslq	%esi, %rsi
	salq	$3, %rsi
	addq	%rsi, %rax
	movl	-336(%rbp,%rax,4), %eax
	imull	%ecx, %eax
	movl	-408(%rbp), %ecx
	addl	$3, %ecx
	addl	%eax, %edx
	movslq	%ecx, %rax
	movl	-412(%rbp), %ecx
	movslq	%ecx, %rcx
	salq	$3, %rcx
	addq	%rcx, %rax
	movl	%edx, -272(%rbp,%rax,4)
	addl	$1, -404(%rbp)
.L10:
	cmpl	$1, -404(%rbp)
	jle	.L11
	addl	$4, -408(%rbp)
.L9:
	cmpl	$7, -408(%rbp)
	jle	.L12
	addl	$1, -412(%rbp)
.L8:
	cmpl	$7, -412(%rbp)
	jle	.L13
	leaq	.LC1(%rip), %rdi
	call	puts@PLT
	leaq	-400(%rbp), %rax
	movq	%rax, %rdx
	movl	$2, %esi
	movl	$8, %edi
	call	display
	leaq	.LC2(%rip), %rdi
	call	puts@PLT
	leaq	-336(%rbp), %rax
	movq	%rax, %rdx
	movl	$8, %esi
	movl	$2, %edi
	call	display
	leaq	.LC3(%rip), %rdi
	call	puts@PLT
	leaq	-272(%rbp), %rax
	movq	%rax, %rdx
	movl	$8, %esi
	movl	$8, %edi
	call	display
	movl	$0, %eax
	movq	-8(%rbp), %rdi
	xorq	%fs:40, %rdi
	je	.L15
	call	__stack_chk_fail@PLT
.L15:
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE6:
	.size	main, .-main
	.ident	"GCC: (Ubuntu 7.4.0-1ubuntu1~18.04.1) 7.4.0"
	.section	.note.GNU-stack,"",@progbits
